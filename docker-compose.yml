version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      cache_from:
        - python:3.10-slim
      args:
        BUILDKIT_INLINE_CACHE: 1
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - GOOGLE_APPLICATION_CREDENTIALS=/geologica-474819-ed167a0bd70c.json
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
      - ./outputs:/app/outputs
      - ./geologica-474819-ed167a0bd70c.json:/geologica-474819-ed167a0bd70c.json
      # Кэш для pip
      - pip_cache:/root/.cache/pip
    restart: unless-stopped
    networks:
      - geo-network

  db:
    image: postgres:15-alpine
    environment:
       # значения берутся из .env, здесь оставлены дефолты для ясности
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-app_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Кэш для postgres
      - postgres_cache:/var/cache/postgresql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - geo-network
    # Health check для базы данных
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  postgres_cache:
  pip_cache:

networks:
  geo-network:
    driver: bridge